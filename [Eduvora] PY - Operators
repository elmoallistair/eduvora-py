{"cells":[{"cell_type":"markdown","metadata":{"id":"w6bfN9_pMdlZ"},"source":["#### 1. Operator Aritmatika\n","\n","Digunakan untuk melakukan operasi matematika dasar seperti penjumlahan, pengurangan, perkalian, pembagian, dan lainnya.  \n","Operator ini bekerja dengan tipe data numerik (`integer` dan `float`).\n","\n","| Operator | Nama               | Penjelasan                                         | Contoh       |\n","|----------|--------------------|---------------------------------------------------|--------------|\n","| `+`      | Penjumlahan        | Menjumlahkan dua nilai                           | `x + y`      |\n","| `-`      | Pengurangan        | Mengurangi nilai kedua dari nilai pertama        | `x - y`      |\n","| `*`      | Perkalian          | Mengalikan dua nilai                             | `x * y`      |\n","| `**`     | Pangkat            | Menghitung pangkat nilai pertama oleh nilai kedua | `x ** y`     |\n","| `/`      | Pembagian          | Membagi nilai pertama dengan nilai kedua         | `x / y`      |\n","| `//`     | Pembagian Bulat    | Membagi dua nilai dan membulatkan ke bawah       | `x // y`     |\n","| `%`      | Modulus            | Menghasilkan sisa pembagian dari dua nilai       | `x % y`      |\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CzvYSwa8_fAm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742521462671,"user_tz":-420,"elapsed":14,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"0923ec0a-5d7e-4740-d9e5-5d4c14038ce9"},"outputs":[{"output_type":"stream","name":"stdout","text":["4.5\n","4\n","1\n"]}],"source":["x = 9\n","y = 2\n","\n","print(x / y)  # 4.5\n","print(x // y) # 4\n","print(x % y)  # 1    9 // 2 = 4; 4x2 = 8; 9 - 8 = 1"]},{"cell_type":"markdown","metadata":{"id":"YdHyi3rEjILP"},"source":["#### 2. Operator penugasan\n","\n","Operator ini digunakan untuk menetapkan nilai ke variabel, memperbarui nilainya, atau memanipulasinya dengan operasi tertentu tanpa menuliskan ulang variabel secara eksplisit.\n","\n","| Operator | Nama                      | Penjelasan                                         | Contoh       |\n","|----------|---------------------------|---------------------------------------------------|--------------|\n","| `=`      | Penugasan                 | Memberikan nilai langsung ke variabel            | `x = y`      |\n","| `+=`     | Penugasan Penjumlahan      | Menambahkan nilai baru ke variabel               | `x += y`     |\n","| `-=`     | Penugasan Pengurangan      | Mengurangi nilai variabel dengan nilai tertentu  | `x -= y`     |\n","| `*=`     | Penugasan Perkalian        | Mengalikan variabel dengan nilai tertentu        | `x *= y`     |\n","| `**=`    | Penugasan Pangkat          | Menghitung pangkat dan menyimpan hasilnya       | `x **= y`    |\n","| `/=`     | Penugasan Pembagian        | Membagi variabel dengan nilai tertentu           | `x /= y`     |\n","| `//=`    | Penugasan Pembagian Bulat  | Membagi variabel secara bulat ke bawah          | `x //= y`    |\n","| `%=`     | Penugasan Modulus          | Menghitung sisa pembagian dan menyimpannya ke variabel | `x %= y`  |\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IIHzBz3IhS1p","colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"status":"ok","timestamp":1742522392849,"user_tz":-420,"elapsed":14,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"975b453a-acd1-4952-84a9-59df32728c96"},"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}],"source":["x = 10\n","print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZDnZCYdHlE3S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742522455787,"user_tz":-420,"elapsed":7,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"e7eb1848-0aad-41bf-ff93-4906a2f80afc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["17"]},"metadata":{},"execution_count":8}],"source":["x -= 3 # x = 14 + 3\n","x"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"urpNNK5olZG-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742522495163,"user_tz":-420,"elapsed":10,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"1ce66a49-abaf-4f60-d6cd-b3f907cba112"},"outputs":[{"output_type":"stream","name":"stdout","text":["8\n","40\n","100\n"]}],"source":["# Penugasan pengurangan\n","x = 10\n","x -= 2 # x = 10 - 2\n","print(x) # Output : 8\n","\n","# Penugasan perkalian\n","x = 20\n","x *= 2 # x = 20 * 2\n","print(x) # Output : 40\n","\n","# Penugasan pangkat\n","x = 10\n","x **= 2 # x = 10 ** 2\n","print(x) # Output : 100\n"]},{"cell_type":"markdown","metadata":{"id":"aZRBl-66C9tP"},"source":["#### 3. Operator Perbandingan\n","\n","Comparison operators dalam Python digunakan untuk membandingkan dua nilai, dan menghasilkan nilai boolean (`True` atau `False`).\n","\n","Operator ini sering digunakan dalam struktur kontrol seperti `if`, `while`, dan ekspresi logika lainnya.\n","\n","| Operator | Nama                      | Penjelasan                                        | Contoh (`x = 5, y = 3`) |\n","|----------|---------------------------|--------------------------------------------------|-------------------------|\n","| `==`     | Sama dengan               | `True` jika `x` sama dengan `y`                 | `x == y` → `False`      |\n","| `!=`     | Tidak sama dengan         | `True` jika `x` tidak sama dengan `y`           | `x != y` → `True`       |\n","| `>`      | Lebih besar dari          | `True` jika `x` lebih besar dari `y`            | `x > y` → `True`        |\n","| `<`      | Lebih kecil dari          | `True` jika `x` lebih kecil dari `y`            | `x < y` → `False`       |\n","| `>=`     | Lebih besar/sama dengan   | `True` jika `x` lebih besar atau sama dengan `y`| `x >= y` → `True`       |\n","| `<=`     | Lebih kecil/sama dengan   | `True` jika `x` lebih kecil atau sama dengan `y`| `x <= y` → `False`      |\n"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"IqyoGCU4jaxk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745128696432,"user_tz":-420,"elapsed":6,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"1b2be72d-ce59-4492-dae0-cc7790d90837"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":7}],"source":["x = 10\n","y = 20\n","\n","x < y"]},{"cell_type":"code","source":["nilai = 90\n","\n","if nilai >= 80: # 90 >= 80\n","    print('Lulus')\n","else:\n","    print('Gak lulus')"],"metadata":{"id":"NLrm_IrBcZUI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745128801391,"user_tz":-420,"elapsed":8,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"7a8fccf6-6f4e-448a-e3cf-3a1aec629c58"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Lulus\n"]}]},{"cell_type":"markdown","metadata":{"id":"qcTjCAeuEDIh"},"source":["#### 4. Operator Logika\n","\n","Operator logika digunakan untuk mengkombinasikan pernyataan logis dan menghasilkan nilai boolean (`True` atau `False`).  \n","\n","Biasanya digunakan dalam kondisi `if`, `while`, atau ekspresi logika lainnya.\n","\n","| Operator | Nama       | Penjelasan                                                  | Contoh (`x = True, y = False`) |\n","|----------|-----------|------------------------------------------------------------|--------------------------------|\n","| `and`    | Dan       | `True` jika kedua kondisi bernilai `True`                  | `x and y` → `False`           |\n","| `or`     | Atau      | `True` jika salah satu kondisi bernilai `True`             | `x or y` → `True`             |\n","| `not`    | Negasi    | Membalikkan nilai boolean (`True` menjadi `False`, sebaliknya) | `not x` → `False`             |\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bK34SWHDLyVL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742546875995,"user_tz":-420,"elapsed":18,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"aca5e1e6-636f-487e-d55d-dbe47a0c2a8b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":9}],"source":["not True"]},{"cell_type":"code","source":["nilai = 50\n","kehadiran = 80"],"metadata":{"id":"SEDNkzugd83D"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"n2NKu7U0EJOF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742546968639,"user_tz":-420,"elapsed":12,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"7016bfc7-e0e5-4c9f-d858-6b03afde42a9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Lulus\n"]}],"source":["# Peserta lulus jika:\n","# - nilainya lebih dari 60\n","# - kehadirannya lebih dari 70\n","if (nilai > 60 or kehadiran > 70): # 50 > 60 : False | 80 > 70 True\n","    print(\"Lulus\")          # Jika statement di atas True\n","else:\n","    print(\"Tidak Lulus\")    # Jika statement di atas False"]},{"cell_type":"markdown","metadata":{"id":"ESVd-cmxrN87"},"source":["### 5. Operator Keanggotaan\n","\n","Operator keanggotaan digunakan untuk memeriksa apakah sebuah nilai ada di dalam urutan (seperti list, tuple, string, dll.). Hasilnya adalah nilai boolean (`True` atau `False`).\n","\n","| Operator   | Nama            | Penjelasan                                                   | Contoh (`x = 3, y = [1, 2, 3, 4]`) |\n","|------------|-----------------|-------------------------------------------------------------|-------------------------------------|\n","| `in`       | Keanggotaan     | `True` jika nilai ada di dalam urutan (list, string, dll.)  | `x in y` → `True`                   |\n","| `not in`   | Bukan Keanggotaan| `True` jika nilai tidak ada di dalam urutan                 | `5 not in y` → `True`               |"]},{"cell_type":"code","source":["'a' not in 'bAkso'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NaIsjaaqIVxw","executionInfo":{"status":"ok","timestamp":1742550990574,"user_tz":-420,"elapsed":11,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"0977b60a-5a19-4ef4-9748-9a373e73519a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["lst = {'apel', 'jeruk', 'mangga'}\n","\n","'apel' in lst"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0KuRWpK0IKCd","executionInfo":{"status":"ok","timestamp":1742551047733,"user_tz":-420,"elapsed":11,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"ac343347-7b6b-4a37-bf2a-51cb690d4ff0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":20}]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNMJNRnczHP8ah4Au6D/s+d"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}