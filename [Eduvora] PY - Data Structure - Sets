{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNyKsChPoSzEoZIadlNlSXB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Tipe Data Set\n","\n","Tipe data set adalah koleksi data tak berurutan yang elemen-elemennya unik (tidak ada duplikat).\n","\n","- **set**: Kumpulan elemen unik yang bisa diubah (*mutable*).\n","- **frozenset**: Versi *immutable* dari set, tidak bisa diubah setelah dibuat.\n","\n","Karakteristik dari set:\n","- Elemen tidak memiliki urutan tetap.\n","- Tidak ada elemen yang duplikat.\n","- Tidak bisa diakses dengan indeks (seperti `set[0]`)."],"metadata":{"id":"uCNpU--OmEdQ"}},{"cell_type":"code","source":["s1 = {1, 2, 5, 3, 4, 1, 4, 6, 10, 2}\n","l1 = [10, 20, 30, 40, 50]\n","\n","print(s1[2])"],"metadata":{"id":"TaoxN0FEVQrK","colab":{"base_uri":"https://localhost:8080/","height":177},"executionInfo":{"status":"error","timestamp":1744103918709,"user_tz":-420,"elapsed":136,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"fa160e14-b9c6-49af-928a-2859d8fe362d"},"execution_count":14,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"'set' object is not subscriptable","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-45e55ebcb669>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0ml1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m40\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m50\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'set' object is not subscriptable"]}]},{"cell_type":"markdown","source":["&nbsp;\n","#### Metode dalam `set` dan `frozenset`\n","\n","Metode adalah fungsi yang melekat pada objek, dipanggil dengan tanda titik.\n","\n","\n","| Method                       | Berlaku untuk       | Deskripsi                                           | Contoh Penggunaan              |\n","|-----------------------------|---------------------|-----------------------------------------------------|-------------------------------|\n","| `add(item)`                 | `set`               | Tambah satu elemen ke set                           | `s.add(5)`                    |\n","| `remove()`                     | `set`               | Hapus salah satu elemen          | `s.remove(element)`                     |\n","| `copy()`                    | `set`               | Buat salinan dari set                               | `s2 = s.copy()`               |\n","| `clear()`                   | `set`               | Hapus semua elemen dari set                         | `s.clear()`                   |\n","| `discard(item)`             | `set`, `frozenset`  | Hapus elemen, tidak error jika tidak ada            | `s.discard(3)`                |\n","| `remove(item)`              | `set`, `frozenset`  | Hapus elemen, akan error jika tidak ada             | `s.remove(3)`                 |\n","| `intersection(other)`       | `set`, `frozenset`  | Elemen yang ada di kedua set                        | `s1.intersection(s2)`         |\n","| `isdisjoint(other)`         | `set`, `frozenset`  | True jika tidak ada elemen yang sama                | `s1.isdisjoint(s2)`           |\n","| `issubset(other)`           | `set`, `frozenset`  | True jika semua elemen ada di set lain              | `s1.issubset(s2)`             |\n","| `issuperset(other)`         | `set`, `frozenset`  | True jika mencakup semua elemen dari set lain       | `s1.issuperset(s2)`           |\n","| `symmetric_difference(other)` | `set`, `frozenset`| Elemen yang hanya ada di salah satu set             | `s1.symmetric_difference(s2)` |\n","| `union(other)`              | `set`, `frozenset`  | Gabungkan dua set                                   | `s1.union(s2)`                |"],"metadata":{"id":"mdRqKLDB9DNn"}},{"cell_type":"code","source":["s1 = {1, 2, 3, 4, 5}\n","s2 = {4, 5, 6, 7, 8}\n","\n","s1.intersection(s2)"],"metadata":{"id":"jfIUiVivVZAp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744104311204,"user_tz":-420,"elapsed":10,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"1449cb8b-c68c-4375-95ef-88f80ffdbc31"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{4, 5}"]},"metadata":{},"execution_count":24}]}]}