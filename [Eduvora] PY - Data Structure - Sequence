{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOVnfGn7EwSwfRBkjiqVfBc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Tipe Data Urutan\n","\n","Jenis struktur data yang menyimpan elemen dalam urutan tertentu, sehingga setiap elemen memiliki posisi (indeks) yang tetap."],"metadata":{"id":"uCNpU--OmEdQ"}},{"cell_type":"markdown","source":["#### 1. List\n","\n","Kumpulan elemen yang terurut, bisa diubah, dan bisa berisi berbagai tipe data.\n","\n","Dibuat dengan tanda kurung siku: `[item1, item2, ...]`.\n"],"metadata":{"id":"tXYbNYCZmLWt"}},{"cell_type":"code","source":["lst1 = [10, 20, 'Hello', True, [1, 2, 3]]\n","\n","lst1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Kg145GYmx_c","executionInfo":{"status":"ok","timestamp":1743747058214,"user_tz":-420,"elapsed":55,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"f73babd4-bfd5-4599-d73a-0e134358b755"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[10, 20, 'Hello', True, [1, 2, 3]]"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["#### 2. Tuple\n","\n","Mirip list, tapi tidak bisa diubah setelah dibuat (_immutable_)\n","\n","Dibuat dengan tanda kurung biasa: `(item1, item2, ...)`."],"metadata":{"id":"aP3oy7GZGKpR"}},{"cell_type":"code","source":["tuple1 = (10, 20, 'Hello', True, (1, 2, 3))\n","\n","tuple1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mQcOR3nhGWzx","executionInfo":{"status":"ok","timestamp":1743747100960,"user_tz":-420,"elapsed":12,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"04e8bc93-050d-4a0b-f0bb-177d9243add1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10, 20, 'Hello', True, (1, 2, 3))"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["#### 3. Range\n","Urutan angka yang dibuat dengan pola tertentu, biasanya dipakai untuk perulangan.\n","\n","Dibuat dengan fungsi `range()`\n","\n","```\n","range(start, stop, step)\n","```\n","\n","- `start`: Angka awal (opsional, default = 0).\n","- `stop`: Angka terakhir, tapi angkanya tidak ikut dihitung.\n","- `step`: Jarak antar angka (opsional, default = 1)."],"metadata":{"id":"JZNJoIiZGXIG"}},{"cell_type":"code","source":["for i in range(11):\n","    print(i, end=' ')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C3t_GIaYGXeI","executionInfo":{"status":"ok","timestamp":1743747325640,"user_tz":-420,"elapsed":24,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"3396602d-9513-4c2e-b891-57d6a26d7779"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0 1 2 3 4 5 6 7 8 9 10 "]}]},{"cell_type":"markdown","source":["&nbsp;\n","#### Operasi dan Metode Penting yang Ada di List & Tuple\n","\n","- Metode adalah fungsi yang melekat pada objek, dipanggil dengan tanda titik.\n","- Operasi adalah aksi umum menggunakan simbol atau fungsi built-in.\n","\n","| Operasi               | Deskripsi                                              | Contoh Sintaks                    |\n","|------------------------|--------------------------------------------------------|-----------------------------------|\n","| **Indexing & Slicing** | Akses elemen atau sebagian sequence                   | `seq[0]`, `seq[1:4]`              |\n","| **Concatenation**      | Gabungkan dua sequence                                | `seq1 + seq2`                     |\n","| **Repetition**         | Ulangi elemen dalam sequence                          | `seq * n`                         |\n","| **Membership**         | Cek apakah item ada dalam sequence                    | `item in seq`                     |\n","| **Length**             | Hitung jumlah elemen                                  | `len(seq)`                        |\n","| **Counting Elements**  | Hitung jumlah kemunculan item                         | `seq.count(item)`                 |\n","| **Finding Index**      | Temukan posisi item pertama yang cocok                | `seq.index(item)`                 |"],"metadata":{"id":"pE4wWysF6qnP"}},{"cell_type":"code","source":["list_1 = [10, 20, 30, 40, 50, 30, 70, 20, 30, 40, 100]\n","tuple_1 = (60, 70, 80, 90, 100)\n","\n","list_1.index(30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wG0ZTHYoZT-B","executionInfo":{"status":"ok","timestamp":1744625345707,"user_tz":-420,"elapsed":10,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"50813e8f-a002-4c5d-c3ef-01acb3412551"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["&nbsp;\n","\n","#### Metode yang Hanya Ada di List\n","\n","List bisa diubah (*mutable*), jadi elemen dapat ditambah, dihapus, atau diubah. Sedangkan tuple tidak bisa diubah (*immutable*), sehingga operasi berikut tidak bisa dilakukan.\n","\n","| Operasi     | Deskripsi                                                       | Contoh Sintaks                    |\n","|-------------|------------------------------------------------------------------|-----------------------------------|\n","| **Append**  | Tambah satu elemen ke akhir list                                | `list.append(item)`              |\n","| **Extend**  | Tambah semua isi dari iterable ke list                          | `list.extend(iterable)`          |\n","| **Insert**  | Sisipkan elemen di indeks tertentu                              | `list.insert(index, item)`       |\n","| **Remove**  | Hapus elemen pertama yang cocok nilainya                        | `list.remove(item)`              |\n","| **Pop**     | Hapus elemen di indeks tertentu dan kembalikan nilainya         | `list.pop(index)`                |"],"metadata":{"id":"BjoSc8ji6woT"}},{"cell_type":"markdown","source":[],"metadata":{"id":"frmTGFP0y1Lo"}},{"cell_type":"markdown","source":[],"metadata":{"id":"Ot2c3Bssy1JG"}},{"cell_type":"code","source":["list_1 = [1, 2, 3, 1, 4, 2, 5, 8, 4]\n","\n","nilai_yang_dihapus = list_1.pop(2)\n","print(nilai_yang_dihapus)"],"metadata":{"id":"cUMGZBVX8U_p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744625740279,"user_tz":-420,"elapsed":6,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"d7cd5cbe-f7ce-409c-baf6-64e77be41670"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"markdown","source":["&nbsp;\n","\n","#### Type Casting\n","Merubah tipe data urutan lain (seperti list, tuple, range, atau string) ke list atau tuple\n","\n","- `list()` : mengubah menjadi list yang bisa diubah.\n","- `tuple()` : mengubah menjadi tuple yang tidak bisa diubah."],"metadata":{"id":"NxEerM5_G79p"}},{"cell_type":"code","source":["type(tuple(\"hello\"))"],"metadata":{"id":"5ufrMLUhHhHl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744625842382,"user_tz":-420,"elapsed":6,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"82c5a30d-369d-48c3-e0bf-d8a0a48af43a"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tuple"]},"metadata":{},"execution_count":30}]}]}