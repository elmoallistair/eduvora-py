{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOSbcMXKkJgQ+STspjPEXvw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Exception\n","\n","Exception adalah kesalahan yang terjadi saat program berjalan, tetapi dapat ditangani agar tidak menyebabkan program berhenti tiba-tiba.\n","\n","&nbsp;\n","\n","#### Error yang dapat ditangani :\n","\n","> `ValueError`, `TypeError`, `IndexError`, `KeyError`, `FileNotFoundError`, `ZeroDivisionError`, `AttributeError`, `ImportError`, `PermissionError`, `TimeoutError`\n","\n","Bisa dihandling karena terjadi saat program berjalan (runtime error) dan masih memungkinkan untuk ditangkap dengan `try-except`.\n","\n","&nbsp;\n","\n","#### Error yang tidak dapat ditangani :\n","\n","> `SyntaxError`, `IndentationError`, `SystemExit`, `KeyboardInterrupt`, `MemoryError`, `RecursionError`\n","\n","Tidak bisa dihandling karena terjadi sebelum program berjalan\n","\n","&nbsp;\n","#### Sintaks\n","\n","```\n","try:\n","    perintah_1    # Kode yang mungkin menyebabkan error\n","except JenisException:\n","    perintah_2    # Kode yang dijalankan jika perintah_1 terjadi error\n","```"],"metadata":{"id":"qlI_-lIOKzwP"}},{"cell_type":"code","source":["try:\n","    x = 1 / 0\n","except ValueError:\n","    print(\"Terjadi kesalahan pada tipe\")"],"metadata":{"id":"Zat0wqSimf20","colab":{"base_uri":"https://localhost:8080/","height":196},"executionInfo":{"status":"error","timestamp":1743749512048,"user_tz":-420,"elapsed":22,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"a8dcd729-08c0-4744-9996-fb6c2420074d"},"execution_count":12,"outputs":[{"output_type":"error","ename":"ZeroDivisionError","evalue":"division by zero","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mZeroDivisionError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-b88efba4f2f9>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Terjadi kesalahan pada tipe\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mZeroDivisionError\u001b[0m: division by zero"]}]},{"cell_type":"markdown","source":["&nbsp;\n","### Menangkap Semua Jenis Exception\n","\n","Menangkap semua jenis exception dengan `Exception` sebagai general handler.\n","- `Exception` menangkap semua error tanpa menyebutkan jenisnya.\n","- Pesan error dapat disimpan ke variabel untuk debugging."],"metadata":{"id":"FjRa4OlNT4RG"}},{"cell_type":"code","source":["try:\n","    x = contoh_fungsi()\n","except Exception as e:\n","    print(f\"Terjadi error {e}\")"],"metadata":{"id":"pzC85OIFUP0q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1743749621980,"user_tz":-420,"elapsed":20,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"9bc97b63-6121-48ca-ee09-9bfef02292de"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Terjadi error name 'contoh_fungsi' is not defined\n"]}]},{"cell_type":"markdown","source":["&nbsp;\n","### Menggunakan statement `finally`\n","\n","Perintah di dalam statement `finally` akan selalu dijalankan, terlepas ada error atau tidak"],"metadata":{"id":"IBlf49lvLh4H"}},{"cell_type":"code","source":["try:\n","    x = 1 / 1\n","except Exception as e:\n","    print(f\"Terjadi error: {e}\")\n","finally:\n","    print(\"Blok finally selalu dijalankan!\")"],"metadata":{"id":"lkDgH4YqUpMu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1743749680051,"user_tz":-420,"elapsed":21,"user":{"displayName":"Elmo Allistair","userId":"10987414782066235031"}},"outputId":"c6fb0ee6-5c45-4bab-e5e8-2d0b55c3e9cc"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Blok finally selalu dijalankan!\n"]}]}]}